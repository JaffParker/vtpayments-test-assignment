{"version":3,"sources":["helpers/validator/pipe.ts","helpers/validator/rules/email.ts","helpers/validator/rules/required.ts","helpers/validator/rules/sameAs.ts","helpers/validator/index.ts","contexts/DisabledFormContext.ts","components/Forms/Inputs/TextInput.tsx","components/Layout/Views/MiniHeader.tsx","components/Forms/Inputs/TextInput.module.css","components/Forms/Inputs/SubmitButton.tsx","components/Forms/Inputs/PasswordInput.tsx","graphql/mutations/SignIn.ts","types/Errors/SignInErrors.ts","components/Forms/Inputs/EmailInput.tsx","components/Auth/Forms/SignInForm.tsx","components/Auth/Containers/SignInContainer.tsx","components/Routers/Routes/SignInRoute.tsx"],"names":["pipe","_len","arguments","length","rules","Array","_key","value","values","errors","filter","rule","reduce","concat","Object","toConsumableArray","undefined","error","email","message","test","isEmpty","required","isBoolean","sameAs","fieldName","hasOwnProperty","__webpack_require__","d","__webpack_exports__","pipe_pipe","email_email","required_required","sameAs_sameAs","DisabledFormContext","createContext","Provider","TextInput","_ref","name","props","objectWithoutProperties","_useField","useField","objectSpread","validateOnBlur","validate","validateOnChange","validateOnMount","fieldApi","fieldState","_useField$fieldState","touched","formDisabled","useContext","inputProps","omitBy","includes","react_default","a","createElement","react","esm","assign","disabled","className","classNames","defineProperty","is-invalid","styles","Disabled","FormFeedback","tooltip","MiniHeader","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_logo_png__WEBPACK_IMPORTED_MODULE_1__","_logo_png__WEBPACK_IMPORTED_MODULE_1___default","src","logo","alt","module","exports","SubmitButton","_ref$disabled","_ref$submitting","submitting","children","_home_jaffparker_Code_Work_VTPayments_code_test_assignment_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_useFormState","useFormState","pristine","invalid","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_3__","type","color","PasswordInput","_TextInput__WEBPACK_IMPORTED_MODULE_1__","SignInErrors","SignIn","gql","_templateObject","UserFragments","profile","permissions","EmailInput","_ref$validate","SignInForm","onSubmit","PasswordInvalid","UserNotFound","getErrorMessage","FormGroup","Label","htmlFor","EmailInput_EmailInput","SignInContainer","signIn","AuthContext","react_apollo_esm","mutation","onCompleted","_ref2","_ref2$signIn","token","user","_ref3","loading","SignInForm_SignInForm","variables","input","graphQLErrors","SignInRoute","Container","Col","sm","md","size","offset","SignInContainer_SignInContainer"],"mappings":"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","file":"static/js/5.d3462da7.chunk.js","sourcesContent":["//eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const pipe = (...rules: Array<Function | undefined>) => (\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  values: Record<string, any>,\n): string | undefined => {\n  const errors = rules\n    .filter(rule => rule)\n    .reduce(\n      //@ts-ignore\n      (errors, rule: Function) => [...errors, rule(value, values) || undefined],\n      [],\n    )\n    //@ts-ignore\n    .filter(error => error)\n\n  return errors.length ? errors[0] : undefined\n}\n","import isEmpty from 'lodash/isEmpty'\n\n//eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const email = (message = 'This does not look like an email') => (\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n) =>\n  /([\\w\\.\\-_]+)?\\w+@[\\w-_]+(\\.\\w+){1,}/i.test(value) || isEmpty(value)\n    ? undefined\n    : message\n","import isEmpty from 'lodash/isEmpty'\nimport isBoolean from 'lodash/isBoolean'\n\n//eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const required = (message = 'Value cannot be empty') => (\n  value: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n) => (!isBoolean(value) && isEmpty(value) ? message : undefined)\n","import isEmpty from 'lodash/isEmpty'\n\n//eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const sameAs = (\n  fieldName: string,\n  message = `Value must be the same as ${fieldName}`,\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n) => (value: any, values: { [key: string]: any }) =>\n  isEmpty(value) ||\n  (values.hasOwnProperty(fieldName) && values[fieldName] === value)\n    ? undefined\n    : message\n","import { pipe } from './pipe'\nimport { email } from './rules/email'\nimport { required } from './rules/required'\nimport { date } from './rules/date'\nimport { after } from './rules/after'\nimport { phone } from './rules/phone'\nimport { regex } from './rules/regex'\nimport { oneOf } from './rules/oneOf'\nimport { sameAs } from './rules/sameAs'\n\nexport { pipe, email, required, date, after, phone, regex, oneOf, sameAs }\n","import { createContext } from 'react'\n\nexport const DisabledFormContext = createContext(false)\nexport const DisabledFormContextProvider = DisabledFormContext.Provider\n","import React, { FC, Fragment, useContext } from 'react'\nimport { BasicText, useField } from 'informed'\nimport classNames from 'classnames'\nimport { FormFeedback } from 'reactstrap'\nimport { BasicInputProps } from './BasicInputProps'\nimport omitBy from 'lodash/omitBy'\nimport { DisabledFormContext } from '../../../contexts/DisabledFormContext'\nimport styles from './TextInput.module.css'\n\nexport const TextInput: FC<BasicInputProps<string>> = ({ name, ...props }) => {\n  const {\n    fieldApi,\n    fieldState,\n    fieldState: { touched, error },\n  } = useField(name, {\n    ...props,\n    validateOnBlur: !!props.validate,\n    validateOnChange: !!props.validate,\n    validateOnMount: !!props.validate,\n  })\n  const formDisabled = useContext(DisabledFormContext)\n\n  const inputProps = omitBy(\n    props,\n    value => !['string', 'number'].includes(typeof value),\n  )\n\n  return (\n    <Fragment>\n      <BasicText\n        disabled={formDisabled}\n        fieldState={fieldState}\n        fieldApi={fieldApi}\n        {...inputProps}\n        className={classNames('form-control', {\n          'is-invalid': touched && error,\n          [styles.Disabled]: formDisabled,\n        })}\n      />\n      {error && touched && <FormFeedback tooltip>{error}</FormFeedback>}\n    </Fragment>\n  )\n}\n","import React, { FC } from 'react'\nimport logo from './logo.png'\n\nexport const MiniHeader: FC = () => (\n  <div className=\"text-center\">\n    <img src={logo} alt=\"VTPayments\" />\n  </div>\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Disabled\":\"TextInput_Disabled__udp3B\"};","import React, { FC } from 'react'\nimport { useFormState } from 'informed'\nimport { Button, ButtonProps } from 'reactstrap'\n\ninterface SubmitButtonProps extends ButtonProps {\n  submitting: boolean\n}\n\nexport const SubmitButton: FC<SubmitButtonProps> = ({\n  disabled = false,\n  submitting = false,\n  children,\n  ...props\n}) => {\n  const { pristine, invalid } = useFormState()\n\n  return (\n    <Button\n      type=\"submit\"\n      color=\"success\"\n      disabled={pristine || invalid || submitting || disabled}\n      className={submitting ? 'progress-bar-striped progress-bar-animated' : ''}\n      {...props}\n    >\n      {children}\n    </Button>\n  )\n}\n","import React from 'react'\nimport { TextInput } from './TextInput'\nimport { BasicInputProps } from './BasicInputProps'\n\nexport const PasswordInput: React.FC<BasicInputProps<string>> = props => (\n  <TextInput type=\"password\" {...props} />\n)\n","import gql from 'graphql-tag'\nimport { UserFragments } from '../fragments/User'\n\nexport const SignIn = gql`\n  mutation SignIn($input: SignInInput!) {\n    signIn(input: $input) {\n      token\n      user {\n        id\n        ...UserProfile\n        ...UserPermissions\n      }\n    }\n  }\n\n  ${UserFragments.profile}\n  ${UserFragments.permissions}\n`\n","export enum SignInErrors {\n  UserNotFound = 'USER_NOT_FOUND',\n  PasswordNotSet = 'PASSWORD_NOT_SET',\n  PasswordInvalid = 'PASSWORD_INVALID',\n}\n","import React from 'react'\nimport { TextInput } from './TextInput'\nimport { pipe, email } from '../../../helpers/validator'\nimport { BasicInputProps } from './BasicInputProps'\n\nexport const EmailInput: React.FC<BasicInputProps<string>> = ({\n  validate = () => undefined,\n  ...props\n}) => (\n  <TextInput\n    type=\"email\"\n    validate={pipe(\n      email(),\n      validate,\n    )}\n    {...props}\n  />\n)\n","import React, { FC, Fragment } from 'react'\nimport { FormGroup, Label } from 'reactstrap'\nimport { EmailInput } from '../../Forms/Inputs/EmailInput'\nimport { required } from '../../../helpers/validator'\nimport { SubmitButton } from '../../Forms/Inputs/SubmitButton'\nimport { PasswordInput } from '../../Forms/Inputs/PasswordInput'\nimport { SignInErrors } from '../../../types/Errors/SignInErrors'\nimport { Form } from 'informed'\n\nexport interface SignInFormValues {\n  email: string\n  password: string\n}\ninterface SignInFormProps {\n  onSubmit: (values: SignInFormValues) => void\n  submitting: boolean\n  error?: SignInErrors\n}\n\nconst getErrorMessage = (error: SignInErrors): string => {\n  switch (error) {\n    case SignInErrors.PasswordInvalid:\n      return 'The password you gave does not match the one we have'\n\n    case SignInErrors.UserNotFound:\n      return 'Cannot find this email in the database'\n\n    default:\n      return 'Something went wrong.'\n  }\n}\n\nexport const SignInForm: FC<SignInFormProps> = ({\n  onSubmit,\n  submitting,\n  error,\n}) => (\n  <Form onSubmit={onSubmit}>\n    {() => (\n      <Fragment>\n        {error && <span className=\"text-danger\">{getErrorMessage(error)}</span>}\n        <FormGroup>\n          <Label htmlFor=\"email\">Email:</Label>\n          <EmailInput name=\"email\" validate={required()} />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"password\">Password:</Label>\n          <PasswordInput name=\"password\" validate={required()} />\n        </FormGroup>\n        <div className=\"clearfix\">\n          <SubmitButton submitting={submitting} className=\"float-right\">\n            Sign In\n          </SubmitButton>\n        </div>\n      </Fragment>\n    )}\n  </Form>\n)\n","import React, { Fragment, FC, useContext } from 'react'\nimport { MiniHeader } from '../../Layout/Views/MiniHeader'\nimport { Mutation } from 'react-apollo'\nimport { SignIn } from '../../../graphql/mutations/SignIn'\nimport { SignInForm, SignInFormValues } from '../Forms/SignInForm'\nimport { SignInInput, Auth } from '../../../types/Api'\nimport {\n  AuthContext,\n  GuestAuthContextState,\n} from '../../../contexts/AuthContext'\n\nexport const SignInContainer: FC = () => {\n  const { signIn } = useContext(AuthContext) as GuestAuthContextState\n\n  return (\n    <Mutation<{ signIn: Auth }, { input: SignInInput }>\n      mutation={SignIn}\n      onCompleted={({ signIn: { token, user } }) => {\n        signIn(user, token)\n      }}\n    >\n      {(signIn, { loading, error }) => {\n        const onSubmit = (values: SignInFormValues): void => {\n          signIn({ variables: { input: values } })\n        }\n        return (\n          <Fragment>\n            <MiniHeader />\n            <h1>Sign In</h1>\n            <hr />\n            <SignInForm\n              submitting={loading}\n              onSubmit={onSubmit}\n              error={error ? error.graphQLErrors[0].message : undefined}\n            />\n          </Fragment>\n        )\n      }}\n    </Mutation>\n  )\n}\n","import React from 'react'\nimport { Container, Col } from 'reactstrap'\nimport { SignInContainer } from '../../Auth/Containers/SignInContainer'\n\nexport default function SignInRoute(): JSX.Element {\n  return (\n    <Container>\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"mt-5\">\n        <SignInContainer />\n      </Col>\n    </Container>\n  )\n}\n"],"sourceRoot":""}